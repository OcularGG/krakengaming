/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/gallery/route";
exports.ids = ["app/api/gallery/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgallery%2Froute&page=%2Fapi%2Fgallery%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgallery%2Froute.ts&appDir=C%3A%5CUsers%5Ctijer%5COneDrive%5CDocuments%5Ckrakengaming%5Capps%5Cfrontend%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ctijer%5COneDrive%5CDocuments%5Ckrakengaming%5Capps%5Cfrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgallery%2Froute&page=%2Fapi%2Fgallery%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgallery%2Froute.ts&appDir=C%3A%5CUsers%5Ctijer%5COneDrive%5CDocuments%5Ckrakengaming%5Capps%5Cfrontend%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ctijer%5COneDrive%5CDocuments%5Ckrakengaming%5Capps%5Cfrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/../../node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../../node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_tijer_OneDrive_Documents_krakengaming_apps_frontend_src_app_api_gallery_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/gallery/route.ts */ \"(rsc)/./src/app/api/gallery/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/gallery/route\",\n        pathname: \"/api/gallery\",\n        filename: \"route\",\n        bundlePath: \"app/api/gallery/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\tijer\\\\OneDrive\\\\Documents\\\\krakengaming\\\\apps\\\\frontend\\\\src\\\\app\\\\api\\\\gallery\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_tijer_OneDrive_Documents_krakengaming_apps_frontend_src_app_api_gallery_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1hcHAtbG9hZGVyL2luZGV4LmpzP25hbWU9YXBwJTJGYXBpJTJGZ2FsbGVyeSUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGZ2FsbGVyeSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmdhbGxlcnklMkZyb3V0ZS50cyZhcHBEaXI9QyUzQSU1Q1VzZXJzJTVDdGlqZXIlNUNPbmVEcml2ZSU1Q0RvY3VtZW50cyU1Q2tyYWtlbmdhbWluZyU1Q2FwcHMlNUNmcm9udGVuZCU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDdGlqZXIlNUNPbmVEcml2ZSU1Q0RvY3VtZW50cyU1Q2tyYWtlbmdhbWluZyU1Q2FwcHMlNUNmcm9udGVuZCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDcUQ7QUFDbEk7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGtyYWtlbmdhbWluZy9mcm9udGVuZC8/NTNhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcdGlqZXJcXFxcT25lRHJpdmVcXFxcRG9jdW1lbnRzXFxcXGtyYWtlbmdhbWluZ1xcXFxhcHBzXFxcXGZyb250ZW5kXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXGdhbGxlcnlcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2dhbGxlcnkvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9nYWxsZXJ5XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9nYWxsZXJ5L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcdGlqZXJcXFxcT25lRHJpdmVcXFxcRG9jdW1lbnRzXFxcXGtyYWtlbmdhbWluZ1xcXFxhcHBzXFxcXGZyb250ZW5kXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXGdhbGxlcnlcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgallery%2Froute&page=%2Fapi%2Fgallery%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgallery%2Froute.ts&appDir=C%3A%5CUsers%5Ctijer%5COneDrive%5CDocuments%5Ckrakengaming%5Capps%5Cfrontend%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ctijer%5COneDrive%5CDocuments%5Ckrakengaming%5Capps%5Cfrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(ssr)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!**********************************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \**********************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/gallery/route.ts":
/*!**************************************!*\
  !*** ./src/app/api/gallery/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/../../node_modules/next/dist/api/server.js\");\n\n// Helper function to create gallery items with default enhanced fields\nconst createGalleryItem = (item)=>({\n        upvotes: Math.floor(Math.random() * 20),\n        downvotes: Math.floor(Math.random() * 3),\n        viewCount: Math.floor(Math.random() * 500) + 50,\n        tags: [],\n        ...item\n    });\n// In-memory storage for development (replace with database in production)\nconst galleryItems = [\n    createGalleryItem({\n        id: '1',\n        type: 'image',\n        url: 'https://www.directart.co.uk/mall/images/800s/dhm1519.jpg',\n        thumbnail: 'https://www.directart.co.uk/mall/images/800s/dhm1519.jpg',\n        title: 'The Battle of Trafalgar',\n        description: 'The decisive naval engagement that broke the combined French and Spanish fleets, securing British naval supremacy',\n        uploader: 'Admiral Nelson',\n        uploaderId: 'demo1',\n        createdAt: new Date('2024-06-20T10:30:00Z').toISOString(),\n        tags: [\n            'naval-battle',\n            'trafalgar',\n            'nelson',\n            'historic'\n        ],\n        upvotes: 15,\n        downvotes: 2,\n        viewCount: 324\n    }),\n    createGalleryItem({\n        id: '2',\n        type: 'image',\n        url: 'https://www.directart.co.uk/mall/images/800s/dhm6802pc.jpg',\n        thumbnail: 'https://www.directart.co.uk/mall/images/800s/dhm6802pc.jpg',\n        title: 'Ships of the Line in Formation',\n        description: 'Majestic warships maintaining battle formation, displaying the power and discipline of the Royal Navy',\n        uploader: 'Captain Blackwood',\n        uploaderId: 'demo2',\n        createdAt: new Date('2024-06-21T14:15:00Z').toISOString(),\n        tags: [\n            'ships',\n            'formation',\n            'royal-navy',\n            'tactics'\n        ],\n        upvotes: 8,\n        downvotes: 1,\n        viewCount: 156\n    }),\n    createGalleryItem({\n        id: '3',\n        type: 'image',\n        url: 'https://www.directart.co.uk/mall/images/800s/dhm1165.jpg',\n        thumbnail: 'https://www.directart.co.uk/mall/images/800s/dhm1165.jpg',\n        title: 'Naval Battle in Stormy Seas',\n        description: 'Ships engaging in fierce combat amidst turbulent waters, showcasing the courage of sailors in battle',\n        uploader: 'Captain Hardy',\n        uploaderId: 'demo3',\n        createdAt: new Date('2024-06-21T16:45:00Z').toISOString(),\n        tags: [\n            'storm',\n            'battle',\n            'courage',\n            'naval-combat'\n        ],\n        upvotes: 12,\n        downvotes: 0,\n        viewCount: 289\n    }),\n    createGalleryItem({\n        id: '4',\n        type: 'image',\n        url: 'https://www.directart.co.uk/mall/images/800s/dhm0150.jpg',\n        thumbnail: 'https://www.directart.co.uk/mall/images/800s/dhm0150.jpg',\n        title: 'Victory at Sea',\n        description: 'A triumphant moment as British ships claim victory over enemy vessels in the age of wooden walls',\n        uploader: 'Admiral Collingwood',\n        uploaderId: 'demo4',\n        createdAt: new Date('2024-06-22T09:20:00Z').toISOString(),\n        tags: [\n            'victory',\n            'triumph',\n            'british-navy'\n        ]\n    }),\n    createGalleryItem({\n        id: '5',\n        type: 'image',\n        url: 'https://www.directart.co.uk/mall/images/800s/dhm0515.jpg',\n        thumbnail: 'https://www.directart.co.uk/mall/images/800s/dhm0515.jpg',\n        title: 'Fleet Engagement',\n        description: 'Multiple ships of the line engaging in a grand naval battle, with cannon smoke filling the horizon',\n        uploader: 'Captain Troubridge',\n        uploaderId: 'demo5',\n        createdAt: new Date('2024-06-22T11:30:00Z').toISOString(),\n        tags: [\n            'fleet',\n            'engagement',\n            'cannons',\n            'smoke'\n        ]\n    })\n];\n// In-memory storage for development\nconst comments = [];\nconst votes = [];\nconst favorites = [];\nconst searchHistoryItems = [];\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        // Check if this is a request for a specific feature\n        const feature = searchParams.get('feature');\n        const galleryItemId = searchParams.get('galleryItemId');\n        const userId = searchParams.get('userId');\n        // Handle comments endpoint\n        if (feature === 'comments' && galleryItemId) {\n            const itemComments = comments.filter((c)=>c.galleryItemId === galleryItemId);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                comments: itemComments\n            });\n        }\n        // Handle votes endpoint\n        if (feature === 'votes' && galleryItemId && userId) {\n            const userVote = votes.find((v)=>v.galleryItemId === galleryItemId && v.userId === userId);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                vote: userVote || null\n            });\n        }\n        // Handle favorites endpoint\n        if (feature === 'favorites' && userId) {\n            if (galleryItemId) {\n                const isFavorited = favorites.some((f)=>f.galleryItemId === galleryItemId && f.userId === userId);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    isFavorited\n                });\n            } else {\n                const userFavorites = favorites.filter((f)=>f.userId === userId);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    favorites: userFavorites\n                });\n            }\n        }\n        // Handle search history endpoint\n        if (feature === 'search-history' && userId) {\n            const userSearchHistory = searchHistoryItems.filter((s)=>s.userId === userId).sort((a, b)=>new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()).slice(0, 10); // Last 10 searches\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                searchHistory: userSearchHistory\n            });\n        }\n        // Regular gallery items endpoint\n        // Pagination parameters\n        const page = parseInt(searchParams.get('page') || '1');\n        const limit = parseInt(searchParams.get('limit') || '12');\n        // Sorting parameters\n        const sortBy = searchParams.get('sortBy') || 'createdAt';\n        const sortOrder = searchParams.get('sortOrder') || 'desc';\n        // Search parameter\n        const search = searchParams.get('search') || '';\n        // Date filtering parameters\n        const dateFilter = searchParams.get('dateFilter') || '';\n        const dateRangeEnd = searchParams.get('dateRangeEnd') || '';\n        // Filter items based on search\n        let filteredItems = galleryItems;\n        if (search) {\n            const searchLower = search.toLowerCase();\n            filteredItems = galleryItems.filter((item)=>item.title.toLowerCase().includes(searchLower) || item.description.toLowerCase().includes(searchLower) || item.uploader.toLowerCase().includes(searchLower) || item.tags.some((tag)=>tag.toLowerCase().includes(searchLower)));\n        }\n        // Filter by date if provided\n        if (dateFilter || dateRangeEnd) {\n            filteredItems = filteredItems.filter((item)=>{\n                const itemDate = new Date(item.createdAt);\n                if (dateFilter && dateRangeEnd) {\n                    // Date range\n                    const startDate = new Date(dateFilter);\n                    const endDate = new Date(dateRangeEnd);\n                    endDate.setHours(23, 59, 59, 999); // Include the entire end day\n                    return itemDate >= startDate && itemDate <= endDate;\n                } else if (dateFilter) {\n                    // Exact date (or starting date)\n                    const filterDate = new Date(dateFilter);\n                    const nextDay = new Date(filterDate);\n                    nextDay.setDate(nextDay.getDate() + 1);\n                    return itemDate >= filterDate && itemDate < nextDay;\n                }\n                return true;\n            });\n        }\n        // Sort items\n        filteredItems.sort((a, b)=>{\n            let aValue, bValue;\n            switch(sortBy){\n                case 'createdAt':\n                    aValue = new Date(a.createdAt);\n                    bValue = new Date(b.createdAt);\n                    break;\n                case 'title':\n                    aValue = a.title.toLowerCase();\n                    bValue = b.title.toLowerCase();\n                    break;\n                case 'uploader':\n                    aValue = a.uploader.toLowerCase();\n                    bValue = b.uploader.toLowerCase();\n                    break;\n                case 'upvotes':\n                    aValue = a.upvotes;\n                    bValue = b.upvotes;\n                    break;\n                case 'viewCount':\n                    aValue = a.viewCount;\n                    bValue = b.viewCount;\n                    break;\n                default:\n                    aValue = new Date(a.createdAt);\n                    bValue = new Date(b.createdAt);\n            }\n            if (sortOrder === 'asc') {\n                return aValue > bValue ? 1 : -1;\n            } else {\n                return aValue < bValue ? 1 : -1;\n            }\n        });\n        // Calculate pagination\n        const totalItems = filteredItems.length;\n        const totalPages = Math.ceil(totalItems / limit);\n        const startIndex = (page - 1) * limit;\n        const endIndex = startIndex + limit;\n        const paginatedItems = filteredItems.slice(startIndex, endIndex);\n        // Return paginated results with metadata\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            items: paginatedItems,\n            pagination: {\n                currentPage: page,\n                totalPages,\n                totalItems,\n                itemsPerPage: limit,\n                hasNextPage: page < totalPages,\n                hasPrevPage: page > 1\n            },\n            filters: {\n                search,\n                sortBy,\n                sortOrder,\n                dateFilter,\n                dateRangeEnd\n            }\n        });\n    } catch (error) {\n        console.error('Gallery GET error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const feature = searchParams.get('feature');\n        // Handle different POST features\n        if (feature === 'vote') {\n            const { galleryItemId, userId, voteType } = await request.json();\n            if (!galleryItemId || !userId || !voteType) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Missing required fields'\n                }, {\n                    status: 400\n                });\n            }\n            // Remove existing vote\n            const existingVoteIndex = votes.findIndex((v)=>v.galleryItemId === galleryItemId && v.userId === userId);\n            if (existingVoteIndex !== -1) {\n                const existingVote = votes[existingVoteIndex];\n                votes.splice(existingVoteIndex, 1);\n                // Update gallery item vote counts\n                const item = galleryItems.find((i)=>i.id === galleryItemId);\n                if (item) {\n                    if (existingVote.voteType === 'upvote') {\n                        item.upvotes = Math.max(0, item.upvotes - 1);\n                    } else {\n                        item.downvotes = Math.max(0, item.downvotes - 1);\n                    }\n                }\n                // If same vote type, just remove (toggle off)\n                if (existingVote.voteType === voteType) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: true,\n                        vote: null\n                    });\n                }\n            }\n            // Add new vote\n            const newVote = {\n                id: Date.now().toString(),\n                galleryItemId,\n                userId,\n                voteType: voteType,\n                createdAt: new Date().toISOString()\n            };\n            votes.push(newVote);\n            // Update gallery item vote counts\n            const item = galleryItems.find((i)=>i.id === galleryItemId);\n            if (item) {\n                if (voteType === 'upvote') {\n                    item.upvotes++;\n                } else {\n                    item.downvotes++;\n                }\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                vote: newVote\n            });\n        }\n        if (feature === 'favorite') {\n            const { galleryItemId, userId } = await request.json();\n            if (!galleryItemId || !userId) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Missing required fields'\n                }, {\n                    status: 400\n                });\n            }\n            // Check if already favorited\n            const existingFavoriteIndex = favorites.findIndex((f)=>f.galleryItemId === galleryItemId && f.userId === userId);\n            if (existingFavoriteIndex !== -1) {\n                // Remove favorite (toggle off)\n                favorites.splice(existingFavoriteIndex, 1);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    isFavorited: false\n                });\n            } else {\n                // Add favorite\n                const newFavorite = {\n                    id: Date.now().toString(),\n                    galleryItemId,\n                    userId,\n                    createdAt: new Date().toISOString()\n                };\n                favorites.push(newFavorite);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    isFavorited: true\n                });\n            }\n        }\n        if (feature === 'comment') {\n            const { galleryItemId, userId, userName, content } = await request.json();\n            if (!galleryItemId || !userId || !userName || !content?.trim()) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Missing required fields'\n                }, {\n                    status: 400\n                });\n            }\n            const newComment = {\n                id: Date.now().toString(),\n                galleryItemId,\n                userId,\n                userName,\n                content: content.trim(),\n                createdAt: new Date().toISOString()\n            };\n            comments.push(newComment);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                comment: newComment\n            });\n        }\n        if (feature === 'search-history') {\n            const { userId, searchTerm } = await request.json();\n            if (!userId || !searchTerm?.trim()) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Missing required fields'\n                }, {\n                    status: 400\n                });\n            }\n            // Remove existing search term if it exists\n            const existingIndex = searchHistoryItems.findIndex((s)=>s.userId === userId && s.searchTerm === searchTerm.trim());\n            if (existingIndex !== -1) {\n                searchHistoryItems.splice(existingIndex, 1);\n            }\n            // Add new search history item\n            const newSearchHistory = {\n                id: Date.now().toString(),\n                userId,\n                searchTerm: searchTerm.trim(),\n                createdAt: new Date().toISOString()\n            };\n            searchHistoryItems.unshift(newSearchHistory); // Add to beginning\n            // Keep only last 20 searches per user\n            const userSearches = searchHistoryItems.filter((s)=>s.userId === userId);\n            if (userSearches.length > 20) {\n                const oldestSearchIndex = searchHistoryItems.findIndex((s)=>s.id === userSearches[userSearches.length - 1].id);\n                if (oldestSearchIndex !== -1) {\n                    searchHistoryItems.splice(oldestSearchIndex, 1);\n                }\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                searchHistory: newSearchHistory\n            });\n        }\n        // Regular gallery item upload\n        const { type, url, title, description, tags, uploaderName, uploaderId } = await request.json();\n        if (!type || !url || !title) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Missing required fields'\n            }, {\n                status: 400\n            });\n        }\n        // Process tags if provided\n        let processedTags = [];\n        if (tags && typeof tags === 'string') {\n            processedTags = tags.split(',').map((tag)=>tag.trim()).filter((tag)=>tag.length > 0).slice(0, 5); // Limit to 5 tags\n        }\n        // Generate thumbnail for video URLs\n        let thumbnail = '';\n        if (type === 'video') {\n            thumbnail = generateVideoThumbnail(url);\n        } else {\n            thumbnail = url; // For images, use the image itself as thumbnail\n        }\n        // Format the uploader name\n        let formattedUploaderName = uploaderName || 'Anonymous Captain';\n        if (uploaderName && !uploaderName.toLowerCase().includes('captain')) {\n            formattedUploaderName = `${uploaderName}`;\n        }\n        const newItem = createGalleryItem({\n            id: Date.now().toString(),\n            type,\n            url,\n            thumbnail,\n            title,\n            description: description || '',\n            uploader: formattedUploaderName,\n            uploaderId: uploaderId || 'dev-user',\n            createdAt: new Date().toISOString(),\n            tags: processedTags,\n            upvotes: 0,\n            downvotes: 0,\n            viewCount: 0\n        });\n        galleryItems.unshift(newItem); // Add to beginning of array\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            item: newItem\n        }, {\n            status: 201\n        });\n    } catch (error) {\n        console.error('Gallery POST error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function DELETE(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const itemId = searchParams.get('id');\n        if (!itemId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Item ID is required'\n            }, {\n                status: 400\n            });\n        }\n        const itemIndex = galleryItems.findIndex((item)=>item.id === itemId);\n        if (itemIndex === -1) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Item not found'\n            }, {\n                status: 404\n            });\n        }\n        galleryItems.splice(itemIndex, 1);\n        // Also remove related comments, votes, and favorites\n        const commentsToRemove = comments.filter((c)=>c.galleryItemId === itemId);\n        commentsToRemove.forEach((comment)=>{\n            const index = comments.indexOf(comment);\n            if (index > -1) comments.splice(index, 1);\n        });\n        const votesToRemove = votes.filter((v)=>v.galleryItemId === itemId);\n        votesToRemove.forEach((vote)=>{\n            const index = votes.indexOf(vote);\n            if (index > -1) votes.splice(index, 1);\n        });\n        const favoritesToRemove = favorites.filter((f)=>f.galleryItemId === itemId);\n        favoritesToRemove.forEach((favorite)=>{\n            const index = favorites.indexOf(favorite);\n            if (index > -1) favorites.splice(index, 1);\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: 'Item deleted successfully'\n        }, {\n            status: 200\n        });\n    } catch (error) {\n        console.error('Gallery DELETE error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\nfunction generateVideoThumbnail(url) {\n    // YouTube thumbnail extraction\n    const youtubeMatch = url.match(/(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/)([^&\\n?#]+)/);\n    if (youtubeMatch) {\n        return `https://img.youtube.com/vi/${youtubeMatch[1]}/maxresdefault.jpg`;\n    }\n    // Vimeo thumbnail (would need API call in production)\n    const vimeoMatch = url.match(/vimeo\\.com\\/(\\d+)/);\n    if (vimeoMatch) {\n        return `https://vumbnail.com/${vimeoMatch[1]}.jpg`;\n    }\n    // Default video placeholder\n    return '/api/placeholder/video-thumbnail';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/gallery/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry"], () => (__webpack_exec__("(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgallery%2Froute&page=%2Fapi%2Fgallery%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgallery%2Froute.ts&appDir=C%3A%5CUsers%5Ctijer%5COneDrive%5CDocuments%5Ckrakengaming%5Capps%5Cfrontend%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ctijer%5COneDrive%5CDocuments%5Ckrakengaming%5Capps%5Cfrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();